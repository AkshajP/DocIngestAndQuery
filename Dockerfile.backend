# syntax=docker/dockerfile:1.4

FROM python:3.10-slim

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    python3-dev \
    git \
    curl \
    wget \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libpq-dev \
    libgomp1 \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements file first for better caching
COPY requirements.txt .

# Install Python dependencies
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install --no-cache-dir -r requirements.txt

# Clone and install MinerU
RUN git clone -b release-1.2.2 https://github.com/opendatalab/MinerU.git

# Install MinerU and its dependencies
WORKDIR /app/MinerU
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install ".[full]" --extra-index-url https://wheels.myhloli.com && \
    pip install huggingface_hub

# Return to app directory
WORKDIR /app

# Clean up the MinerU repository (keep only what we need)
RUN rm -rf MinerU

# Create necessary directories for MinerU
RUN mkdir -p /root/.cache/huggingface \
    && mkdir -p /app/models \
    && mkdir -p /tmp/magic_pdf_output \
    && mkdir -p /tmp/magic_pdf_data

# Set environment variables for model download
ENV HF_HOME=/root/.cache/huggingface
ENV HF_HUB_DISABLE_TELEMETRY=1
ENV PYTHONUNBUFFERED=1

# Copy scripts BEFORE copying all application code (better caching)
COPY ./scripts/startup.sh .
COPY ./scripts/debug_models.sh .
COPY download_models_hf.py .

# Make scripts executable
RUN chmod +x startup.sh debug_models.sh 

# Copy application code
COPY . .

# Create document store directory
RUN mkdir -p document_store

# Expose the port
EXPOSE 9000

# Set environment variables
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1

# Use startup script as default command
CMD ["/app/startup.sh"]

